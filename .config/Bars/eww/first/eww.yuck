;;  _____ _           ____                     _   _ _        _       
;; |_   _| |__   ___ / ___| __ _ ___ ___ _   _| \ | (_)_ __  (_) __ _ 
;;   | | | '_ \ / _ \ |  _ / _` / __/ __| | | |  \| | | '_ \ | |/ _` |
;;   | | | | | |  __/ |_| | (_| \__ \__ \ |_| | |\  | | | | || | (_| |
;;   |_| |_| |_|\___|\____|\__,_|___/___/\__, |_| \_|_|_| |_|/ |\__,_|
;;                                       |___/             |__/       
;;   Spawned: Wed Jan 25 2023 - 03:46
;;  Last Mod: Thu Jan 26 2023 - 18:12
;;  Config: Eww Media Player
;;  Depends: {eww scss scripts}  (Pulse/Pipe) pactl
;;  Note: 
;;

;; ** Variables ***********************************************************************

;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)

;; Volume vars
(defpoll VOLUME :interval "1s" "pactl get-sink-volume @DEFAULT_SINK@ | awk '{printf $5}' | cut -d '%' -f 1")

;; Playlist
(defpoll PLAYLIST :interval "1s" `scripts/playlist`)

;; Testing
(defpoll TESTING :interval "30s" "echo testing")

;; Lyrics
(defpoll LYRICS :interval "5s" `scripts/lyrics-test.sh`)

;; ** Widgets *************************************************************************


;; music
(defwidget music [] 
		(box :class "dockbox"
	       	     (box :orientation "h" 
                          :spacing 0 
                          :valign "center" 
                          :halign "start" 
                          :space-evenly "false" 
                          :vexpand "false" 
                          :hexpand "false"
			(box :class "album_art" 
                             :vexpand "false" 
                             :hexpand "false" 
                             :style "background-image: url('${COVER}');")
				(box :class "musicbox" 
                                     :orientation "v" 
                                     :spacing 0 
                                     :valign "center" 
                                     :halign "start" 
                                     :space-evenly "false" 
                                     :vexpand "false" 
                                     :hexpand "false"
					(label :class "song" 
                                               :halign "start" 
                                               :hexpand "false" 
                                               :wrap "false" 
                                               :limit-width 22 
                                               :text SONG)
					(label :class "artist" 
                                               :halign "start" 
                                               :hexpand "false" 
                                               :wrap "false" 
                                               :limit-width 20 
                                               :text ARTIST)))
			(box :class "musicbuttons" 
                             :orientation "h" 
                             :spacing 10 
                             :valign "center" 
                             :halign "center" 
                             :space-evenly "false" 
                             :vexpand "false" 
                             :hexpand "false"
				(button :style "background-image: url('images/icons/music/previous-button.png');" 
                                        :class "trackbutton" :onclick "scripts/music_info --prev")
				(button :style "background-image: url('${STATUS}');" :class "playbutton" 
                                        :onclick "scripts/music_info --toggle")
				(button :style "background-image: url('images/icons/music/next-button.png');" 
                                        :class "trackbutton" 
                                        :onclick "scripts/music_info --next"))))

(defwidget playlist []
                (box :class "playlist"
                  (box :class "musicbox" 
                       :orientation "v" 
                       :spacing 0 
                       :valign "center" 
                       :halign "center" 
                       :space-evenly "false" 
                       :vexpand "false" 
                       :hexpand "false"
                    (label :class "playlist" 
                           :halign "center" 
                           :wrap "false" 
                           :text PLAYLIST))))

(defwidget volume []
                      (box :class "volume"
		        (box :class "music_bar" 
                             :halign "center" 
                             :vexpand "false" 
                             :hexpand "false" 
				(scale :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%" 
                                       :min 0 
                                       :active "true" 
                                       :max 100 
                                       :value VOLUME))))


(defwidget popper []
                (box :class "lyrics"
                  (box :class "lyrics" 
                       :orientation "v" 
                       :spacing 0 

                       :space-evenly "false" 
                       :vexpand "true" 
                       :hexpand "false"
                    (label :class "lyrics" 
                           :halign "center" 
                           :wrap "true" 
                           :text TESTING))))
(defwidget lyrics []
                (box :class "lyrics"
                  (box :class "lyrics" 
                       :orientation "v" 
                       :spacing 0 
                       :valign "top" 
                       :halign "center" 
                       :space-evenly "false" 
                       :vexpand "true" 
                       :hexpand "false"
                    (label :class "lyrics" 
                           :halign "center" 
                           :wrap "true" 
                           :text LYRICS))))


;; ** Windows *************************************************************************


(defwindow music
           :monitor 0
           :geometry (geometry :x "75px"
                               :y "150px"
                               :width "600px"
                               :height "100px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(music))


(defwindow playlist
           :monitor 0
           :geometry (geometry :x "75px"
                               :y "237px"
                               :width "600px"
                               :height "130px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(playlist))


(defwindow volume
           :monitor 0
           :geometry (geometry :x "75px"
                               :y "357px"
                               :width "600px"
                               :height "130px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(volume))


(defwindow lyrics
           :monitor 0
           :geometry (geometry :x "1300px"
                               :y "55px"
                               :width "600px"
                               :height "100px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(lyrics))


(defwindow popper
           :monitor 0
           :geometry (geometry :x "668px"
                               :y "150px"
                               :width "55px"
                               :height "338px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(popper))
