;;  _____ _           ____                     _   _ _        _       
;; |_   _| |__   ___ / ___| __ _ ___ ___ _   _| \ | (_)_ __  (_) __ _ 
;;   | | | '_ \ / _ \ |  _ / _` / __/ __| | | |  \| | | '_ \ | |/ _` |
;;   | | | | | |  __/ |_| | (_| \__ \__ \ |_| | |\  | | | | || | (_| |
;;   |_| |_| |_|\___|\____|\__,_|___/___/\__, |_| \_|_|_| |_|/ |\__,_|
;;                                       |___/             |__/       
;;   Spawned: Wed Jan 25 2023 - 03:46
;;  Last Mod: Sun Oct 29 2023 - 16:46
;;  Config: Eww Media Player
;;  Depends: {eww scss scripts/ images/ }  (Pulse/Pipe) pactl
;;  Note: 
;;

;; ** Variables ***********************************************************************


;; Volume vars
(defpoll VOLUME :interval "1s" "pactl get-sink-volume @DEFAULT_SINK@ | awk '{printf $5}' | cut -d '%' -f 1")

;; ** Windows *************************************************************************

(defwindow volume
           :monitor 0
           :geometry (geometry :x "760px"
                               :y "5px"
                               :width "400px"
                               :height "30px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(volume))

(defwindow clock
           :monitor 0
           :geometry (geometry :x "1745px"
                               :y "5px"
                               :width "100px"
                               :height "30px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(clock))


(defwindow power
           :monitor 0
           :geometry (geometry :x "1850px"
                               :y "5px"
                               :width "50px"
                               :height "30px"
                               :anchor "top left")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
(power))

;; ** Widgets *************************************************************************

(defwidget volume []
                      (box :class "volume"
		        (box :class "music_bar" 
                             :halign "center" 
                             :vexpand "false" 
                             :hexpand "false" 
			     :orientation "v"
                                (scale :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%" 
                                       :min 0 
                                       :active "true" 
                                       :max 100 
                                       :value VOLUME))))


(defwidget clock []
  (box 
    :class "clock"
    :space-evenly false
    :spacing 8
    :halign "center"
    (label 
      :class "clock hour" 
      :text {formattime(EWW_TIME, "%H:%M", "America/Chicago")})))




;; (defwidget power []
;;   (box 
;;     :class "power"
;;     :space-evenly false
;;     :spacing 8
;;     :halign "center"
;;     (label 
;;       :class "power" 
;;       :text "PB")))
;; TESTING 


(defwidget power []
  (box 
    :class "power"
    :space-evenly false
    :spacing 8
    :halign "center"
    (label 
      :class "power" 
      :text "PB")))

(defwidget greeter [?text name]
  (box :orientation "horizontal"
       :halign "center"
    text
    (button :onclick "notify-send 'Hello' 'Hello, ${name}'"
      "Greet")))







